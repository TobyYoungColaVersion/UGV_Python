function J=min_J(dphi)
    global uav_pos
    global aim_pos
    global phi
    global V
    global matchs
    global hunt_ps
    m1=sortrows(matchs,1);
    m2=sortrows(matchs,2);
    alpha=uav_pos-[aim_pos(1,1)*ones(4,1) aim_pos(1,2)*ones(4,1)];
    w=0.5;
    J=w*(norm(uav_pos(1,:)+V*[cos(phi(1)+dphi(1)),sin(phi(1)+dphi(1))]-hunt_ps(m1(1,2),:))+...
           norm(uav_pos(2,:)+V*[cos(phi(2)+dphi(2)),sin(phi(2)+dphi(2))]-hunt_ps(m1(2,2),:))+...
           norm(uav_pos(3,:)+V*[cos(phi(3)+dphi(3)),sin(phi(3)+dphi(3))]-hunt_ps(m1(3,2),:))+...
           norm(uav_pos(4,:)+V*[cos(phi(4)+dphi(4)),sin(phi(4)+dphi(4))]-hunt_ps(m1(4,2),:)))+...
           (1-w)*((abs(abs(atan(alpha(m2(1,1),2)/alpha(m2(1,1),1))-atan(alpha(m2(2,1),2)/alpha(m2(2,1),1)))-pi/2))+...
                  (abs(abs(atan(alpha(m2(2,1),2)/alpha(m2(2,1),1))-atan(alpha(m2(3,1),2)/alpha(m2(3,1),1)))-pi/2))+...
                  (abs(abs(atan(alpha(m2(3,1),2)/alpha(m2(3,1),1))-atan(alpha(m2(4,1),2)/alpha(m2(4,1),1)))-pi/2))+...
                  (abs(abs(atan(alpha(m2(4,1),2)/alpha(m2(4,1),1))-atan(alpha(m2(1,1),2)/alpha(m2(1,1),1)))-pi/2)));
   
end